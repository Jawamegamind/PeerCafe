name: Backend CI

on:
  pull_request:
    branches: ["main"]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
      - 'requirements.*'
  push:
    branches: ["main"]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
      - 'requirements.*'

permissions:
  contents: read

concurrency:
  group: backend-ci-${{ github.sha }}
  cancel-in-progress: true

jobs:
  backend-tests:
    name: Backend - pytest (Python)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ runner.os }}-${{ hashFiles('**/backend/requirements.*') }}
          restore-keys: |
            pip-cache-${{ runner.os }}-

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          # If you use requirements.txt:
          if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
          # If you use conda/requirements.yaml the repo uses conda in README; this example uses pip for CI.
          pip install pytest pytest-cov
        shell: bash

      - name: Run pytest with coverage
        run: |
          mkdir -p backend/test-output || true
          pytest backend --maxfail=1 --disable-warnings --cov=backend --cov-report=xml:backend/coverage.xml
        shell: bash
        env:
          CI: true

      - name: Upload pytest logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-pytest-logs
          path: backend/coverage.xml || backend/.pytest_cache || backend/test-output

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          files: backend/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
